// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AdminLoginLogsColumns holds the columns for the "admin_login_logs" table.
	AdminLoginLogsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true, Comment: "id", SchemaType: map[string]string{"mysql": "int", "postgres": "serial"}},
		{Name: "create_time", Type: field.TypeTime, Nullable: true, Comment: "创建时间"},
		{Name: "update_time", Type: field.TypeTime, Nullable: true, Comment: "更新时间"},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true, Comment: "删除时间"},
		{Name: "login_ip", Type: field.TypeString, Nullable: true, Comment: "登录IP地址"},
		{Name: "login_mac", Type: field.TypeString, Nullable: true, Comment: "登录MAC地址"},
		{Name: "login_time", Type: field.TypeTime, Nullable: true, Comment: "登录时间"},
		{Name: "user_agent", Type: field.TypeString, Nullable: true, Comment: "浏览器的用户代理信息"},
		{Name: "browser_name", Type: field.TypeString, Nullable: true, Comment: "浏览器名称"},
		{Name: "browser_version", Type: field.TypeString, Nullable: true, Comment: "浏览器版本"},
		{Name: "client_id", Type: field.TypeString, Nullable: true, Comment: "客户端ID"},
		{Name: "client_name", Type: field.TypeString, Nullable: true, Comment: "客户端名称"},
		{Name: "os_name", Type: field.TypeString, Nullable: true, Comment: "操作系统名称"},
		{Name: "os_version", Type: field.TypeString, Nullable: true, Comment: "操作系统版本"},
		{Name: "user_id", Type: field.TypeUint32, Nullable: true, Comment: "操作者用户ID"},
		{Name: "user_name", Type: field.TypeString, Nullable: true, Comment: "操作者账号名"},
		{Name: "status_code", Type: field.TypeInt32, Nullable: true, Comment: "状态码"},
		{Name: "success", Type: field.TypeBool, Nullable: true, Comment: "操作成功"},
		{Name: "reason", Type: field.TypeString, Nullable: true, Comment: "登录失败原因"},
		{Name: "location", Type: field.TypeString, Nullable: true, Comment: "登录地理位置"},
	}
	// AdminLoginLogsTable holds the schema information for the "admin_login_logs" table.
	AdminLoginLogsTable = &schema.Table{
		Name:       "admin_login_logs",
		Columns:    AdminLoginLogsColumns,
		PrimaryKey: []*schema.Column{AdminLoginLogsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "adminloginlog_id",
				Unique:  false,
				Columns: []*schema.Column{AdminLoginLogsColumns[0]},
			},
		},
	}
	// AdminOperationLogsColumns holds the columns for the "admin_operation_logs" table.
	AdminOperationLogsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true, Comment: "id", SchemaType: map[string]string{"mysql": "int", "postgres": "serial"}},
		{Name: "create_time", Type: field.TypeTime, Nullable: true, Comment: "创建时间"},
		{Name: "update_time", Type: field.TypeTime, Nullable: true, Comment: "更新时间"},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true, Comment: "删除时间"},
		{Name: "request_id", Type: field.TypeString, Nullable: true, Comment: "请求ID"},
		{Name: "method", Type: field.TypeString, Nullable: true, Comment: "请求方法"},
		{Name: "operation", Type: field.TypeString, Nullable: true, Comment: "操作方法"},
		{Name: "path", Type: field.TypeString, Nullable: true, Comment: "请求路径"},
		{Name: "referer", Type: field.TypeString, Nullable: true, Comment: "请求源"},
		{Name: "request_uri", Type: field.TypeString, Nullable: true, Comment: "请求URI"},
		{Name: "request_body", Type: field.TypeString, Nullable: true, Comment: "请求体"},
		{Name: "request_header", Type: field.TypeString, Nullable: true, Comment: "请求头"},
		{Name: "response", Type: field.TypeString, Nullable: true, Comment: "响应信息"},
		{Name: "cost_time", Type: field.TypeFloat64, Nullable: true, Comment: "操作耗时"},
		{Name: "user_id", Type: field.TypeUint32, Nullable: true, Comment: "操作者用户ID"},
		{Name: "user_name", Type: field.TypeString, Nullable: true, Comment: "操作者账号名"},
		{Name: "client_ip", Type: field.TypeString, Nullable: true, Comment: "操作者IP"},
		{Name: "status_code", Type: field.TypeInt32, Nullable: true, Comment: "状态码"},
		{Name: "reason", Type: field.TypeString, Nullable: true, Comment: "操作失败原因"},
		{Name: "success", Type: field.TypeBool, Nullable: true, Comment: "操作成功"},
		{Name: "location", Type: field.TypeString, Nullable: true, Comment: "操作地理位置"},
		{Name: "user_agent", Type: field.TypeString, Nullable: true, Comment: "浏览器的用户代理信息"},
		{Name: "browser_name", Type: field.TypeString, Nullable: true, Comment: "浏览器名称"},
		{Name: "browser_version", Type: field.TypeString, Nullable: true, Comment: "浏览器版本"},
		{Name: "client_id", Type: field.TypeString, Nullable: true, Comment: "客户端ID"},
		{Name: "client_name", Type: field.TypeString, Nullable: true, Comment: "客户端名称"},
		{Name: "os_name", Type: field.TypeString, Nullable: true, Comment: "操作系统名称"},
		{Name: "os_version", Type: field.TypeString, Nullable: true, Comment: "操作系统版本"},
	}
	// AdminOperationLogsTable holds the schema information for the "admin_operation_logs" table.
	AdminOperationLogsTable = &schema.Table{
		Name:       "admin_operation_logs",
		Columns:    AdminOperationLogsColumns,
		PrimaryKey: []*schema.Column{AdminOperationLogsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "adminoperationlog_id",
				Unique:  false,
				Columns: []*schema.Column{AdminOperationLogsColumns[0]},
			},
		},
	}
	// DepartmentsColumns holds the columns for the "departments" table.
	DepartmentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true, Comment: "id", SchemaType: map[string]string{"mysql": "int", "postgres": "serial"}},
		{Name: "create_time", Type: field.TypeTime, Nullable: true, Comment: "创建时间"},
		{Name: "update_time", Type: field.TypeTime, Nullable: true, Comment: "更新时间"},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true, Comment: "删除时间"},
		{Name: "status", Type: field.TypeEnum, Nullable: true, Comment: "状态", Enums: []string{"OFF", "ON"}, Default: "ON"},
		{Name: "create_by", Type: field.TypeUint32, Nullable: true, Comment: "创建者ID"},
		{Name: "update_by", Type: field.TypeUint32, Nullable: true, Comment: "更新者ID"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "备注", Default: ""},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "名字", Default: ""},
		{Name: "organization_id", Type: field.TypeUint32, Nullable: true, Comment: "所属组织ID"},
		{Name: "sort_id", Type: field.TypeInt32, Nullable: true, Comment: "排序ID", Default: 0},
		{Name: "parent_id", Type: field.TypeUint32, Nullable: true, Comment: "上一层部门ID", SchemaType: map[string]string{"mysql": "int", "postgres": "serial"}},
	}
	// DepartmentsTable holds the schema information for the "departments" table.
	DepartmentsTable = &schema.Table{
		Name:       "departments",
		Columns:    DepartmentsColumns,
		PrimaryKey: []*schema.Column{DepartmentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "departments_departments_children",
				Columns:    []*schema.Column{DepartmentsColumns[11]},
				RefColumns: []*schema.Column{DepartmentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "department_id",
				Unique:  false,
				Columns: []*schema.Column{DepartmentsColumns[0]},
			},
		},
	}
	// DictColumns holds the columns for the "dict" table.
	DictColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true, Comment: "id", SchemaType: map[string]string{"mysql": "int", "postgres": "serial"}},
		{Name: "create_time", Type: field.TypeTime, Nullable: true, Comment: "创建时间"},
		{Name: "update_time", Type: field.TypeTime, Nullable: true, Comment: "更新时间"},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true, Comment: "删除时间"},
		{Name: "status", Type: field.TypeEnum, Nullable: true, Comment: "状态", Enums: []string{"OFF", "ON"}, Default: "ON"},
		{Name: "create_by", Type: field.TypeUint32, Nullable: true, Comment: "创建者ID"},
		{Name: "update_by", Type: field.TypeUint32, Nullable: true, Comment: "更新者ID"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "备注", Default: ""},
		{Name: "key", Type: field.TypeString, Unique: true, Nullable: true, Comment: "字典键"},
		{Name: "category", Type: field.TypeString, Nullable: true, Comment: "字典类型"},
		{Name: "category_desc", Type: field.TypeString, Nullable: true, Comment: "字典类型名称"},
		{Name: "value", Type: field.TypeString, Nullable: true, Comment: "字典值"},
		{Name: "value_desc", Type: field.TypeString, Nullable: true, Comment: "字典值名称"},
		{Name: "value_data_type", Type: field.TypeString, Nullable: true, Comment: "字典值数据类型"},
		{Name: "sort_id", Type: field.TypeInt32, Nullable: true, Comment: "排序ID", Default: 0},
	}
	// DictTable holds the schema information for the "dict" table.
	DictTable = &schema.Table{
		Name:       "dict",
		Columns:    DictColumns,
		PrimaryKey: []*schema.Column{DictColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "dict_id",
				Unique:  false,
				Columns: []*schema.Column{DictColumns[0]},
			},
		},
	}
	// FilesColumns holds the columns for the "files" table.
	FilesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true, Comment: "id", SchemaType: map[string]string{"mysql": "int", "postgres": "serial"}},
		{Name: "create_time", Type: field.TypeTime, Nullable: true, Comment: "创建时间"},
		{Name: "update_time", Type: field.TypeTime, Nullable: true, Comment: "更新时间"},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true, Comment: "删除时间"},
		{Name: "create_by", Type: field.TypeUint32, Nullable: true, Comment: "创建者ID"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "备注", Default: ""},
		{Name: "provider", Type: field.TypeEnum, Nullable: true, Comment: "OSS供应商", Enums: []string{"MinIO", "Aliyun", "Qiniu", "Tencent", "AWS", "Google", "Azure", "Baidu", "Huawei", "QCloud", "Local", "Unknown"}},
		{Name: "bucket_name", Type: field.TypeString, Nullable: true, Comment: "存储桶名称"},
		{Name: "file_directory", Type: field.TypeString, Nullable: true, Comment: "文件目录"},
		{Name: "file_guid", Type: field.TypeString, Nullable: true, Comment: "文件Guid"},
		{Name: "save_file_name", Type: field.TypeString, Nullable: true, Comment: "保存文件名"},
		{Name: "file_name", Type: field.TypeString, Nullable: true, Comment: "文件名"},
		{Name: "extension", Type: field.TypeString, Nullable: true, Comment: "文件扩展名"},
		{Name: "size", Type: field.TypeUint64, Nullable: true, Comment: "文件字节长度"},
		{Name: "size_format", Type: field.TypeString, Nullable: true, Comment: "文件大小格式化"},
		{Name: "link_url", Type: field.TypeString, Nullable: true, Comment: "链接地址"},
		{Name: "md5", Type: field.TypeString, Nullable: true, Comment: "md5码，防止上传重复文件"},
	}
	// FilesTable holds the schema information for the "files" table.
	FilesTable = &schema.Table{
		Name:       "files",
		Columns:    FilesColumns,
		PrimaryKey: []*schema.Column{FilesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "file_id",
				Unique:  false,
				Columns: []*schema.Column{FilesColumns[0]},
			},
		},
	}
	// MenusColumns holds the columns for the "menus" table.
	MenusColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt32, Increment: true, Comment: "id"},
		{Name: "status", Type: field.TypeEnum, Nullable: true, Comment: "状态", Enums: []string{"OFF", "ON"}, Default: "ON"},
		{Name: "create_time", Type: field.TypeTime, Nullable: true, Comment: "创建时间"},
		{Name: "update_time", Type: field.TypeTime, Nullable: true, Comment: "更新时间"},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true, Comment: "删除时间"},
		{Name: "create_by", Type: field.TypeUint32, Nullable: true, Comment: "创建者ID"},
		{Name: "update_by", Type: field.TypeUint32, Nullable: true, Comment: "更新者ID"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "备注", Default: ""},
		{Name: "type", Type: field.TypeEnum, Nullable: true, Comment: "菜单类型 FOLDER: 目录 MENU: 菜单 BUTTON: 按钮", Enums: []string{"FOLDER", "MENU", "BUTTON"}, Default: "MENU"},
		{Name: "path", Type: field.TypeString, Nullable: true, Comment: "路径,当其类型为'按钮'的时候对应的数据操作名,例如:/user.service.v1.UserService/Login", Default: ""},
		{Name: "redirect", Type: field.TypeString, Nullable: true, Comment: "重定向地址"},
		{Name: "alias", Type: field.TypeString, Nullable: true, Comment: "路由别名"},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "路由命名，然后我们可以使用 name 而不是 path 来传递 to 属性给 <router-link>。"},
		{Name: "component", Type: field.TypeString, Nullable: true, Comment: "前端页面组件", Default: ""},
		{Name: "meta", Type: field.TypeJSON, Nullable: true, Comment: "前端页面组件"},
		{Name: "parent_id", Type: field.TypeInt32, Nullable: true, Comment: "上一层菜单ID"},
	}
	// MenusTable holds the schema information for the "menus" table.
	MenusTable = &schema.Table{
		Name:       "menus",
		Columns:    MenusColumns,
		PrimaryKey: []*schema.Column{MenusColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "menus_menus_children",
				Columns:    []*schema.Column{MenusColumns[15]},
				RefColumns: []*schema.Column{MenusColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// NotificationMessagesColumns holds the columns for the "notification_messages" table.
	NotificationMessagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true, Comment: "id", SchemaType: map[string]string{"mysql": "int", "postgres": "serial"}},
		{Name: "create_time", Type: field.TypeTime, Nullable: true, Comment: "创建时间"},
		{Name: "update_time", Type: field.TypeTime, Nullable: true, Comment: "更新时间"},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true, Comment: "删除时间"},
		{Name: "create_by", Type: field.TypeUint32, Nullable: true, Comment: "创建者ID"},
		{Name: "update_by", Type: field.TypeUint32, Nullable: true, Comment: "更新者ID"},
		{Name: "subject", Type: field.TypeString, Nullable: true, Comment: "主题"},
		{Name: "content", Type: field.TypeString, Nullable: true, Comment: "内容"},
		{Name: "category_id", Type: field.TypeUint32, Nullable: true, Comment: "分类ID"},
		{Name: "status", Type: field.TypeEnum, Nullable: true, Comment: "消息状态", Enums: []string{"Draft", "Published", "Scheduled", "Revoked", "Archived", "Unknown", "Deleted"}},
	}
	// NotificationMessagesTable holds the schema information for the "notification_messages" table.
	NotificationMessagesTable = &schema.Table{
		Name:       "notification_messages",
		Columns:    NotificationMessagesColumns,
		PrimaryKey: []*schema.Column{NotificationMessagesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "notificationmessage_id",
				Unique:  false,
				Columns: []*schema.Column{NotificationMessagesColumns[0]},
			},
		},
	}
	// NotificationMessageCategoriesColumns holds the columns for the "notification_message_categories" table.
	NotificationMessageCategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true, Comment: "id", SchemaType: map[string]string{"mysql": "int", "postgres": "serial"}},
		{Name: "create_time", Type: field.TypeTime, Nullable: true, Comment: "创建时间"},
		{Name: "update_time", Type: field.TypeTime, Nullable: true, Comment: "更新时间"},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true, Comment: "删除时间"},
		{Name: "create_by", Type: field.TypeUint32, Nullable: true, Comment: "创建者ID"},
		{Name: "update_by", Type: field.TypeUint32, Nullable: true, Comment: "更新者ID"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "备注", Default: ""},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "名称"},
		{Name: "code", Type: field.TypeString, Nullable: true, Comment: "编码"},
		{Name: "sort_id", Type: field.TypeInt32, Nullable: true, Comment: "排序编号"},
		{Name: "enable", Type: field.TypeBool, Nullable: true, Comment: "是否启用"},
		{Name: "parent_id", Type: field.TypeUint32, Nullable: true, Comment: "父节点ID", SchemaType: map[string]string{"mysql": "int", "postgres": "serial"}},
	}
	// NotificationMessageCategoriesTable holds the schema information for the "notification_message_categories" table.
	NotificationMessageCategoriesTable = &schema.Table{
		Name:       "notification_message_categories",
		Columns:    NotificationMessageCategoriesColumns,
		PrimaryKey: []*schema.Column{NotificationMessageCategoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "notification_message_categories_notification_message_categories_children",
				Columns:    []*schema.Column{NotificationMessageCategoriesColumns[11]},
				RefColumns: []*schema.Column{NotificationMessageCategoriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "notificationmessagecategory_id",
				Unique:  false,
				Columns: []*schema.Column{NotificationMessageCategoriesColumns[0]},
			},
		},
	}
	// NotificationMessageRecipientsColumns holds the columns for the "notification_message_recipients" table.
	NotificationMessageRecipientsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true, Comment: "id", SchemaType: map[string]string{"mysql": "int", "postgres": "serial"}},
		{Name: "create_time", Type: field.TypeTime, Nullable: true, Comment: "创建时间"},
		{Name: "update_time", Type: field.TypeTime, Nullable: true, Comment: "更新时间"},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true, Comment: "删除时间"},
		{Name: "message_id", Type: field.TypeUint32, Nullable: true, Comment: "群发消息ID"},
		{Name: "recipient_id", Type: field.TypeUint32, Nullable: true, Comment: "接收者用户ID"},
		{Name: "status", Type: field.TypeEnum, Nullable: true, Comment: "消息状态", Enums: []string{"Received", "Read", "Archived", "Unknown", "Deleted"}},
	}
	// NotificationMessageRecipientsTable holds the schema information for the "notification_message_recipients" table.
	NotificationMessageRecipientsTable = &schema.Table{
		Name:       "notification_message_recipients",
		Columns:    NotificationMessageRecipientsColumns,
		PrimaryKey: []*schema.Column{NotificationMessageRecipientsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "notificationmessagerecipient_id",
				Unique:  false,
				Columns: []*schema.Column{NotificationMessageRecipientsColumns[0]},
			},
		},
	}
	// OrganizationsColumns holds the columns for the "organizations" table.
	OrganizationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true, Comment: "id", SchemaType: map[string]string{"mysql": "int", "postgres": "serial"}},
		{Name: "create_time", Type: field.TypeTime, Nullable: true, Comment: "创建时间"},
		{Name: "update_time", Type: field.TypeTime, Nullable: true, Comment: "更新时间"},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true, Comment: "删除时间"},
		{Name: "status", Type: field.TypeEnum, Nullable: true, Comment: "状态", Enums: []string{"OFF", "ON"}, Default: "ON"},
		{Name: "create_by", Type: field.TypeUint32, Nullable: true, Comment: "创建者ID"},
		{Name: "update_by", Type: field.TypeUint32, Nullable: true, Comment: "更新者ID"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "备注", Default: ""},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "名字", Default: ""},
		{Name: "sort_id", Type: field.TypeInt32, Nullable: true, Comment: "排序ID", Default: 0},
		{Name: "parent_id", Type: field.TypeUint32, Nullable: true, Comment: "上一层组织ID", SchemaType: map[string]string{"mysql": "int", "postgres": "serial"}},
	}
	// OrganizationsTable holds the schema information for the "organizations" table.
	OrganizationsTable = &schema.Table{
		Name:       "organizations",
		Columns:    OrganizationsColumns,
		PrimaryKey: []*schema.Column{OrganizationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "organizations_organizations_children",
				Columns:    []*schema.Column{OrganizationsColumns[10]},
				RefColumns: []*schema.Column{OrganizationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "organization_id",
				Unique:  false,
				Columns: []*schema.Column{OrganizationsColumns[0]},
			},
		},
	}
	// PositionsColumns holds the columns for the "positions" table.
	PositionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true, Comment: "id", SchemaType: map[string]string{"mysql": "int", "postgres": "serial"}},
		{Name: "create_time", Type: field.TypeTime, Nullable: true, Comment: "创建时间"},
		{Name: "update_time", Type: field.TypeTime, Nullable: true, Comment: "更新时间"},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true, Comment: "删除时间"},
		{Name: "status", Type: field.TypeEnum, Nullable: true, Comment: "状态", Enums: []string{"OFF", "ON"}, Default: "ON"},
		{Name: "create_by", Type: field.TypeUint32, Nullable: true, Comment: "创建者ID"},
		{Name: "update_by", Type: field.TypeUint32, Nullable: true, Comment: "更新者ID"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "备注", Default: ""},
		{Name: "name", Type: field.TypeString, Size: 128, Comment: "职位名称", Default: ""},
		{Name: "code", Type: field.TypeString, Size: 128, Comment: "职位标识", Default: ""},
		{Name: "sort_id", Type: field.TypeInt32, Comment: "排序ID", Default: 0},
		{Name: "parent_id", Type: field.TypeUint32, Nullable: true, Comment: "上一层职位ID", Default: 0, SchemaType: map[string]string{"mysql": "int", "postgres": "serial"}},
	}
	// PositionsTable holds the schema information for the "positions" table.
	PositionsTable = &schema.Table{
		Name:       "positions",
		Columns:    PositionsColumns,
		PrimaryKey: []*schema.Column{PositionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "positions_positions_children",
				Columns:    []*schema.Column{PositionsColumns[11]},
				RefColumns: []*schema.Column{PositionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "position_id",
				Unique:  false,
				Columns: []*schema.Column{PositionsColumns[0]},
			},
		},
	}
	// PrivateMessagesColumns holds the columns for the "private_messages" table.
	PrivateMessagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true, Comment: "id", SchemaType: map[string]string{"mysql": "int", "postgres": "serial"}},
		{Name: "create_time", Type: field.TypeTime, Nullable: true, Comment: "创建时间"},
		{Name: "update_time", Type: field.TypeTime, Nullable: true, Comment: "更新时间"},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true, Comment: "删除时间"},
		{Name: "subject", Type: field.TypeString, Nullable: true, Comment: "主题"},
		{Name: "content", Type: field.TypeString, Nullable: true, Comment: "内容"},
		{Name: "status", Type: field.TypeEnum, Nullable: true, Comment: "消息状态", Enums: []string{"Draft", "Sent", "Received", "Read", "Archived", "Unknown", "Deleted"}},
		{Name: "sender_id", Type: field.TypeUint32, Nullable: true, Comment: "发送者用户ID"},
		{Name: "receiver_id", Type: field.TypeUint32, Nullable: true, Comment: "接收者用户ID"},
	}
	// PrivateMessagesTable holds the schema information for the "private_messages" table.
	PrivateMessagesTable = &schema.Table{
		Name:       "private_messages",
		Columns:    PrivateMessagesColumns,
		PrimaryKey: []*schema.Column{PrivateMessagesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "privatemessage_id",
				Unique:  false,
				Columns: []*schema.Column{PrivateMessagesColumns[0]},
			},
		},
	}
	// RolesColumns holds the columns for the "roles" table.
	RolesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true, Comment: "id", SchemaType: map[string]string{"mysql": "int", "postgres": "serial"}},
		{Name: "create_time", Type: field.TypeTime, Nullable: true, Comment: "创建时间"},
		{Name: "update_time", Type: field.TypeTime, Nullable: true, Comment: "更新时间"},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true, Comment: "删除时间"},
		{Name: "status", Type: field.TypeEnum, Nullable: true, Comment: "状态", Enums: []string{"OFF", "ON"}, Default: "ON"},
		{Name: "create_by", Type: field.TypeUint32, Nullable: true, Comment: "创建者ID"},
		{Name: "update_by", Type: field.TypeUint32, Nullable: true, Comment: "更新者ID"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "备注", Default: ""},
		{Name: "name", Type: field.TypeString, Unique: true, Nullable: true, Size: 128, Comment: "角色名称"},
		{Name: "code", Type: field.TypeString, Nullable: true, Size: 128, Comment: "角色标识", Default: ""},
		{Name: "sort_id", Type: field.TypeInt32, Nullable: true, Comment: "排序ID", Default: 0},
		{Name: "menus", Type: field.TypeJSON, Nullable: true, Comment: "分配的菜单列表"},
		{Name: "parent_id", Type: field.TypeUint32, Nullable: true, Comment: "上一层角色ID", SchemaType: map[string]string{"mysql": "int", "postgres": "serial"}},
	}
	// RolesTable holds the schema information for the "roles" table.
	RolesTable = &schema.Table{
		Name:       "roles",
		Columns:    RolesColumns,
		PrimaryKey: []*schema.Column{RolesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "roles_roles_children",
				Columns:    []*schema.Column{RolesColumns[12]},
				RefColumns: []*schema.Column{RolesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "role_id",
				Unique:  false,
				Columns: []*schema.Column{RolesColumns[0]},
			},
		},
	}
	// TasksColumns holds the columns for the "tasks" table.
	TasksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true, Comment: "id", SchemaType: map[string]string{"mysql": "int", "postgres": "serial"}},
		{Name: "create_time", Type: field.TypeTime, Nullable: true, Comment: "创建时间"},
		{Name: "update_time", Type: field.TypeTime, Nullable: true, Comment: "更新时间"},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true, Comment: "删除时间"},
		{Name: "create_by", Type: field.TypeUint32, Nullable: true, Comment: "创建者ID"},
		{Name: "update_by", Type: field.TypeUint32, Nullable: true, Comment: "更新者ID"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "备注", Default: ""},
		{Name: "type", Type: field.TypeEnum, Nullable: true, Comment: "任务类型", Enums: []string{"Periodic", "Delay", "WaitResult"}},
		{Name: "type_name", Type: field.TypeString, Unique: true, Nullable: true, Comment: "任务执行类型名"},
		{Name: "task_payload", Type: field.TypeString, Nullable: true, Comment: "任务的参数，以 JSON 格式存储，方便存储不同类型和数量的参数"},
		{Name: "cron_spec", Type: field.TypeString, Nullable: true, Comment: "cron表达式，用于定义任务的调度时间"},
		{Name: "retry_count", Type: field.TypeUint32, Nullable: true, Comment: "任务最多可以重试的次数"},
		{Name: "timeout", Type: field.TypeUint64, Nullable: true, Comment: "任务超时时间"},
		{Name: "deadline", Type: field.TypeTime, Nullable: true, Comment: "任务超时时间"},
		{Name: "process_in", Type: field.TypeUint64, Nullable: true, Comment: "任务延迟处理时间"},
		{Name: "process_at", Type: field.TypeTime, Nullable: true, Comment: "任务执行时间点"},
		{Name: "enable", Type: field.TypeBool, Nullable: true, Comment: "启用/禁用任务"},
	}
	// TasksTable holds the schema information for the "tasks" table.
	TasksTable = &schema.Table{
		Name:       "tasks",
		Columns:    TasksColumns,
		PrimaryKey: []*schema.Column{TasksColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "task_id",
				Unique:  false,
				Columns: []*schema.Column{TasksColumns[0]},
			},
		},
	}
	// TenantsColumns holds the columns for the "tenants" table.
	TenantsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true, Comment: "id", SchemaType: map[string]string{"mysql": "int", "postgres": "serial"}},
		{Name: "create_time", Type: field.TypeTime, Nullable: true, Comment: "创建时间"},
		{Name: "update_time", Type: field.TypeTime, Nullable: true, Comment: "更新时间"},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true, Comment: "删除时间"},
		{Name: "status", Type: field.TypeEnum, Nullable: true, Comment: "状态", Enums: []string{"OFF", "ON"}, Default: "ON"},
		{Name: "create_by", Type: field.TypeUint32, Nullable: true, Comment: "创建者ID"},
		{Name: "update_by", Type: field.TypeUint32, Nullable: true, Comment: "更新者ID"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "备注", Default: ""},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "租户名称"},
		{Name: "code", Type: field.TypeString, Nullable: true, Size: 64, Comment: "租户编号"},
		{Name: "member_count", Type: field.TypeInt32, Nullable: true, Comment: "成员数", Default: 0},
		{Name: "subscription_at", Type: field.TypeTime, Nullable: true, Comment: "订阅时间"},
		{Name: "unsubscribe_at", Type: field.TypeTime, Nullable: true, Comment: "取消订阅时间"},
	}
	// TenantsTable holds the schema information for the "tenants" table.
	TenantsTable = &schema.Table{
		Name:       "tenants",
		Columns:    TenantsColumns,
		PrimaryKey: []*schema.Column{TenantsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "tenant_id",
				Unique:  false,
				Columns: []*schema.Column{TenantsColumns[0]},
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true, Comment: "id", SchemaType: map[string]string{"mysql": "int", "postgres": "serial"}},
		{Name: "create_by", Type: field.TypeUint32, Nullable: true, Comment: "创建者ID"},
		{Name: "update_by", Type: field.TypeUint32, Nullable: true, Comment: "更新者ID"},
		{Name: "create_time", Type: field.TypeTime, Nullable: true, Comment: "创建时间"},
		{Name: "update_time", Type: field.TypeTime, Nullable: true, Comment: "更新时间"},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true, Comment: "删除时间"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "备注", Default: ""},
		{Name: "status", Type: field.TypeEnum, Nullable: true, Comment: "状态", Enums: []string{"OFF", "ON"}, Default: "ON"},
		{Name: "username", Type: field.TypeString, Unique: true, Nullable: true, Comment: "用户名"},
		{Name: "password", Type: field.TypeString, Nullable: true, Size: 255, Comment: "登录密码"},
		{Name: "nick_name", Type: field.TypeString, Nullable: true, Size: 255, Comment: "昵称"},
		{Name: "real_name", Type: field.TypeString, Nullable: true, Size: 255, Comment: "真实名字"},
		{Name: "email", Type: field.TypeString, Nullable: true, Size: 320, Comment: "电子邮箱"},
		{Name: "mobile", Type: field.TypeString, Nullable: true, Size: 255, Comment: "手机号码", Default: ""},
		{Name: "telephone", Type: field.TypeString, Nullable: true, Size: 255, Comment: "座机号码", Default: ""},
		{Name: "avatar", Type: field.TypeString, Nullable: true, Size: 1023, Comment: "头像"},
		{Name: "gender", Type: field.TypeEnum, Nullable: true, Comment: "性别", Enums: []string{"UNKNOWN", "MALE", "FEMALE"}},
		{Name: "address", Type: field.TypeString, Nullable: true, Size: 2048, Comment: "地址", Default: ""},
		{Name: "region", Type: field.TypeString, Nullable: true, Size: 255, Comment: "国家地区", Default: ""},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 1023, Comment: "个人说明"},
		{Name: "authority", Type: field.TypeEnum, Nullable: true, Comment: "授权", Enums: []string{"SYS_ADMIN", "SYS_MANAGER", "CUSTOMER_USER", "GUEST_USER", "REFRESH_TOKEN"}, Default: "CUSTOMER_USER"},
		{Name: "last_login_time", Type: field.TypeInt64, Nullable: true, Comment: "最后一次登录的时间"},
		{Name: "last_login_ip", Type: field.TypeString, Nullable: true, Size: 64, Comment: "最后一次登录的IP", Default: ""},
		{Name: "role_id", Type: field.TypeUint32, Nullable: true, Comment: "角色ID"},
		{Name: "org_id", Type: field.TypeUint32, Nullable: true, Comment: "部门ID"},
		{Name: "position_id", Type: field.TypeUint32, Nullable: true, Comment: "职位ID"},
		{Name: "work_id", Type: field.TypeUint32, Nullable: true, Comment: "员工工号"},
		{Name: "tenant_id", Type: field.TypeUint32, Nullable: true, Comment: "租户ID"},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "user_id",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[0]},
			},
			{
				Name:    "user_id_username",
				Unique:  true,
				Columns: []*schema.Column{UsersColumns[0], UsersColumns[8]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AdminLoginLogsTable,
		AdminOperationLogsTable,
		DepartmentsTable,
		DictTable,
		FilesTable,
		MenusTable,
		NotificationMessagesTable,
		NotificationMessageCategoriesTable,
		NotificationMessageRecipientsTable,
		OrganizationsTable,
		PositionsTable,
		PrivateMessagesTable,
		RolesTable,
		TasksTable,
		TenantsTable,
		UsersTable,
	}
)

func init() {
	AdminLoginLogsTable.Annotation = &entsql.Annotation{
		Table:     "admin_login_logs",
		Charset:   "utf8mb4",
		Collation: "utf8mb4_bin",
	}
	AdminOperationLogsTable.Annotation = &entsql.Annotation{
		Table:     "admin_operation_logs",
		Charset:   "utf8mb4",
		Collation: "utf8mb4_bin",
	}
	DepartmentsTable.ForeignKeys[0].RefTable = DepartmentsTable
	DepartmentsTable.Annotation = &entsql.Annotation{
		Table:     "departments",
		Charset:   "utf8mb4",
		Collation: "utf8mb4_bin",
	}
	DictTable.Annotation = &entsql.Annotation{
		Table:     "dict",
		Charset:   "utf8mb4",
		Collation: "utf8mb4_bin",
	}
	FilesTable.Annotation = &entsql.Annotation{
		Table:     "files",
		Charset:   "utf8mb4",
		Collation: "utf8mb4_bin",
	}
	MenusTable.ForeignKeys[0].RefTable = MenusTable
	MenusTable.Annotation = &entsql.Annotation{
		Table:     "menus",
		Charset:   "utf8mb4",
		Collation: "utf8mb4_bin",
	}
	NotificationMessagesTable.Annotation = &entsql.Annotation{
		Table:     "notification_messages",
		Charset:   "utf8mb4",
		Collation: "utf8mb4_bin",
	}
	NotificationMessageCategoriesTable.ForeignKeys[0].RefTable = NotificationMessageCategoriesTable
	NotificationMessageCategoriesTable.Annotation = &entsql.Annotation{
		Table:     "notification_message_categories",
		Charset:   "utf8mb4",
		Collation: "utf8mb4_bin",
	}
	NotificationMessageRecipientsTable.Annotation = &entsql.Annotation{
		Table:     "notification_message_recipients",
		Charset:   "utf8mb4",
		Collation: "utf8mb4_bin",
	}
	OrganizationsTable.ForeignKeys[0].RefTable = OrganizationsTable
	OrganizationsTable.Annotation = &entsql.Annotation{
		Table:     "organizations",
		Charset:   "utf8mb4",
		Collation: "utf8mb4_bin",
	}
	PositionsTable.ForeignKeys[0].RefTable = PositionsTable
	PositionsTable.Annotation = &entsql.Annotation{
		Table:     "positions",
		Charset:   "utf8mb4",
		Collation: "utf8mb4_bin",
	}
	PrivateMessagesTable.Annotation = &entsql.Annotation{
		Table:     "private_messages",
		Charset:   "utf8mb4",
		Collation: "utf8mb4_bin",
	}
	RolesTable.ForeignKeys[0].RefTable = RolesTable
	RolesTable.Annotation = &entsql.Annotation{
		Table:     "roles",
		Charset:   "utf8mb4",
		Collation: "utf8mb4_bin",
	}
	TasksTable.Annotation = &entsql.Annotation{
		Table:     "tasks",
		Charset:   "utf8mb4",
		Collation: "utf8mb4_bin",
	}
	TenantsTable.Annotation = &entsql.Annotation{
		Table:     "tenants",
		Charset:   "utf8mb4",
		Collation: "utf8mb4_bin",
	}
	UsersTable.Annotation = &entsql.Annotation{
		Table:     "users",
		Charset:   "utf8mb4",
		Collation: "utf8mb4_bin",
	}
}
