// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: admin/service/v1/i_admin_login_log.proto

package servicev1

import (
	_ "github.com/google/gnostic/openapiv3"
	v1 "github.com/tx7do/kratos-bootstrap/api/gen/go/pagination/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 后台登录日志
type AdminLoginLog struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             *uint32                `protobuf:"varint,1,opt,name=id,proto3,oneof" json:"id,omitempty"`                                                // 后台登录日志ID
	LoginIp        *string                `protobuf:"bytes,2,opt,name=login_ip,json=loginIp,proto3,oneof" json:"login_ip,omitempty"`                        // 登录IP地址
	LoginMac       *string                `protobuf:"bytes,3,opt,name=login_mac,json=loginMac,proto3,oneof" json:"login_mac,omitempty"`                     // 登录MAC地址
	LoginTime      *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=login_time,json=loginTime,proto3,oneof" json:"login_time,omitempty"`                  // 登录时间
	StatusCode     *int32                 `protobuf:"varint,5,opt,name=status_code,json=statusCode,proto3,oneof" json:"status_code,omitempty"`              // 状态码
	Success        *bool                  `protobuf:"varint,6,opt,name=success,proto3,oneof" json:"success,omitempty"`                                      // 登录是否成功
	Reason         *string                `protobuf:"bytes,7,opt,name=reason,proto3,oneof" json:"reason,omitempty"`                                         // 登录失败原因
	Location       *string                `protobuf:"bytes,8,opt,name=location,proto3,oneof" json:"location,omitempty"`                                     // 登录地理位置
	UserAgent      *string                `protobuf:"bytes,100,opt,name=user_agent,json=userAgent,proto3,oneof" json:"user_agent,omitempty"`                // 浏览器的用户代理信息
	BrowserName    *string                `protobuf:"bytes,101,opt,name=browser_name,json=browserName,proto3,oneof" json:"browser_name,omitempty"`          // 浏览器名称
	BrowserVersion *string                `protobuf:"bytes,102,opt,name=browser_version,json=browserVersion,proto3,oneof" json:"browser_version,omitempty"` // 浏览器版本
	ClientId       *string                `protobuf:"bytes,200,opt,name=client_id,json=clientId,proto3,oneof" json:"client_id,omitempty"`                   // 客户端ID
	ClientName     *string                `protobuf:"bytes,201,opt,name=client_name,json=clientName,proto3,oneof" json:"client_name,omitempty"`             // 客户端名称
	OsName         *string                `protobuf:"bytes,202,opt,name=os_name,json=osName,proto3,oneof" json:"os_name,omitempty"`                         // 操作系统名称
	OsVersion      *string                `protobuf:"bytes,203,opt,name=os_version,json=osVersion,proto3,oneof" json:"os_version,omitempty"`                // 操作系统版本
	UserId         *uint32                `protobuf:"varint,300,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`                        // 操作者用户ID
	Username       *string                `protobuf:"bytes,301,opt,name=username,proto3,oneof" json:"username,omitempty"`                                   // 操作者账号名
	CreateTime     *string                `protobuf:"bytes,400,opt,name=create_time,json=createTime,proto3,oneof" json:"create_time,omitempty"`             // 创建时间
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AdminLoginLog) Reset() {
	*x = AdminLoginLog{}
	mi := &file_admin_service_v1_i_admin_login_log_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminLoginLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminLoginLog) ProtoMessage() {}

func (x *AdminLoginLog) ProtoReflect() protoreflect.Message {
	mi := &file_admin_service_v1_i_admin_login_log_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminLoginLog.ProtoReflect.Descriptor instead.
func (*AdminLoginLog) Descriptor() ([]byte, []int) {
	return file_admin_service_v1_i_admin_login_log_proto_rawDescGZIP(), []int{0}
}

func (x *AdminLoginLog) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *AdminLoginLog) GetLoginIp() string {
	if x != nil && x.LoginIp != nil {
		return *x.LoginIp
	}
	return ""
}

func (x *AdminLoginLog) GetLoginMac() string {
	if x != nil && x.LoginMac != nil {
		return *x.LoginMac
	}
	return ""
}

func (x *AdminLoginLog) GetLoginTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LoginTime
	}
	return nil
}

func (x *AdminLoginLog) GetStatusCode() int32 {
	if x != nil && x.StatusCode != nil {
		return *x.StatusCode
	}
	return 0
}

func (x *AdminLoginLog) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *AdminLoginLog) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

func (x *AdminLoginLog) GetLocation() string {
	if x != nil && x.Location != nil {
		return *x.Location
	}
	return ""
}

func (x *AdminLoginLog) GetUserAgent() string {
	if x != nil && x.UserAgent != nil {
		return *x.UserAgent
	}
	return ""
}

func (x *AdminLoginLog) GetBrowserName() string {
	if x != nil && x.BrowserName != nil {
		return *x.BrowserName
	}
	return ""
}

func (x *AdminLoginLog) GetBrowserVersion() string {
	if x != nil && x.BrowserVersion != nil {
		return *x.BrowserVersion
	}
	return ""
}

func (x *AdminLoginLog) GetClientId() string {
	if x != nil && x.ClientId != nil {
		return *x.ClientId
	}
	return ""
}

func (x *AdminLoginLog) GetClientName() string {
	if x != nil && x.ClientName != nil {
		return *x.ClientName
	}
	return ""
}

func (x *AdminLoginLog) GetOsName() string {
	if x != nil && x.OsName != nil {
		return *x.OsName
	}
	return ""
}

func (x *AdminLoginLog) GetOsVersion() string {
	if x != nil && x.OsVersion != nil {
		return *x.OsVersion
	}
	return ""
}

func (x *AdminLoginLog) GetUserId() uint32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *AdminLoginLog) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *AdminLoginLog) GetCreateTime() string {
	if x != nil && x.CreateTime != nil {
		return *x.CreateTime
	}
	return ""
}

// 查询后台登录日志列表 - 回应
type ListAdminLoginLogResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*AdminLoginLog       `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Total         uint32                 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAdminLoginLogResponse) Reset() {
	*x = ListAdminLoginLogResponse{}
	mi := &file_admin_service_v1_i_admin_login_log_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAdminLoginLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAdminLoginLogResponse) ProtoMessage() {}

func (x *ListAdminLoginLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_service_v1_i_admin_login_log_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAdminLoginLogResponse.ProtoReflect.Descriptor instead.
func (*ListAdminLoginLogResponse) Descriptor() ([]byte, []int) {
	return file_admin_service_v1_i_admin_login_log_proto_rawDescGZIP(), []int{1}
}

func (x *ListAdminLoginLogResponse) GetItems() []*AdminLoginLog {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListAdminLoginLogResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// 查询后台登录日志详情 - 请求
type GetAdminLoginLogRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAdminLoginLogRequest) Reset() {
	*x = GetAdminLoginLogRequest{}
	mi := &file_admin_service_v1_i_admin_login_log_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAdminLoginLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdminLoginLogRequest) ProtoMessage() {}

func (x *GetAdminLoginLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_service_v1_i_admin_login_log_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdminLoginLogRequest.ProtoReflect.Descriptor instead.
func (*GetAdminLoginLogRequest) Descriptor() ([]byte, []int) {
	return file_admin_service_v1_i_admin_login_log_proto_rawDescGZIP(), []int{2}
}

func (x *GetAdminLoginLogRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 创建后台登录日志 - 请求
type CreateAdminLoginLogRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          *AdminLoginLog         `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAdminLoginLogRequest) Reset() {
	*x = CreateAdminLoginLogRequest{}
	mi := &file_admin_service_v1_i_admin_login_log_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAdminLoginLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAdminLoginLogRequest) ProtoMessage() {}

func (x *CreateAdminLoginLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_service_v1_i_admin_login_log_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAdminLoginLogRequest.ProtoReflect.Descriptor instead.
func (*CreateAdminLoginLogRequest) Descriptor() ([]byte, []int) {
	return file_admin_service_v1_i_admin_login_log_proto_rawDescGZIP(), []int{3}
}

func (x *CreateAdminLoginLogRequest) GetData() *AdminLoginLog {
	if x != nil {
		return x.Data
	}
	return nil
}

// 更新后台登录日志 - 请求
type UpdateAdminLoginLogRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          *AdminLoginLog         `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`              // 要更新的字段列表
	AllowMissing  *bool                  `protobuf:"varint,3,opt,name=allow_missing,json=allowMissing,proto3,oneof" json:"allow_missing,omitempty"` // 如果设置为true的时候，资源不存在则会新增(插入)，并且在这种情况下`updateMask`字段将会被忽略。
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateAdminLoginLogRequest) Reset() {
	*x = UpdateAdminLoginLogRequest{}
	mi := &file_admin_service_v1_i_admin_login_log_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAdminLoginLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAdminLoginLogRequest) ProtoMessage() {}

func (x *UpdateAdminLoginLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_service_v1_i_admin_login_log_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAdminLoginLogRequest.ProtoReflect.Descriptor instead.
func (*UpdateAdminLoginLogRequest) Descriptor() ([]byte, []int) {
	return file_admin_service_v1_i_admin_login_log_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateAdminLoginLogRequest) GetData() *AdminLoginLog {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UpdateAdminLoginLogRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

func (x *UpdateAdminLoginLogRequest) GetAllowMissing() bool {
	if x != nil && x.AllowMissing != nil {
		return *x.AllowMissing
	}
	return false
}

// 删除后台登录日志 - 请求
type DeleteAdminLoginLogRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAdminLoginLogRequest) Reset() {
	*x = DeleteAdminLoginLogRequest{}
	mi := &file_admin_service_v1_i_admin_login_log_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAdminLoginLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAdminLoginLogRequest) ProtoMessage() {}

func (x *DeleteAdminLoginLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_service_v1_i_admin_login_log_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAdminLoginLogRequest.ProtoReflect.Descriptor instead.
func (*DeleteAdminLoginLogRequest) Descriptor() ([]byte, []int) {
	return file_admin_service_v1_i_admin_login_log_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteAdminLoginLogRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

var File_admin_service_v1_i_admin_login_log_proto protoreflect.FileDescriptor

var file_admin_service_v1_i_admin_login_log_proto_rawDesc = string([]byte{
	0x0a, 0x28, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f,
	0x76, 0x31, 0x2f, 0x69, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x5f, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x24, 0x67, 0x6e,
	0x6f, 0x73, 0x74, 0x69, 0x63, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x33,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31,
	0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xcc, 0x0a, 0x0a, 0x0d, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x4c, 0x6f, 0x67, 0x12, 0x32, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42,
	0x1d, 0xe0, 0x41, 0x01, 0xba, 0x47, 0x17, 0x92, 0x02, 0x14, 0xe5, 0x90, 0x8e, 0xe5, 0x8f, 0xb0,
	0xe7, 0x99, 0xbb, 0xe5, 0xbd, 0x95, 0xe6, 0x97, 0xa5, 0xe5, 0xbf, 0x97, 0x49, 0x44, 0x48, 0x00,
	0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x5f, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0x47, 0x11, 0x92, 0x02,
	0x0e, 0xe7, 0x99, 0xbb, 0xe5, 0xbd, 0x95, 0x49, 0x50, 0xe5, 0x9c, 0xb0, 0xe5, 0x9d, 0x80, 0x48,
	0x01, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x70, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a,
	0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x6d, 0x61, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x15, 0xba, 0x47, 0x12, 0x92, 0x02, 0x0f, 0xe7, 0x99, 0xbb, 0xe5, 0xbd, 0x95, 0x4d, 0x41,
	0x43, 0xe5, 0x9c, 0xb0, 0xe5, 0x9d, 0x80, 0x48, 0x02, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x4d, 0x61, 0x63, 0x88, 0x01, 0x01, 0x12, 0x52, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x12, 0xba, 0x47, 0x0f, 0x92, 0x02, 0x0c, 0xe7, 0x99,
	0xbb, 0xe5, 0xbd, 0x95, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0x48, 0x03, 0x52, 0x09, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x0b, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x0f, 0xba, 0x47, 0x0c, 0x92, 0x02, 0x09, 0xe7, 0x8a, 0xb6, 0xe6, 0x80, 0x81, 0xe7, 0xa0, 0x81,
	0x48, 0x04, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x37, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x42, 0x18, 0xba, 0x47, 0x15, 0x92, 0x02, 0x12, 0xe7, 0x99, 0xbb, 0xe5, 0xbd, 0x95,
	0xe6, 0x98, 0xaf, 0xe5, 0x90, 0xa6, 0xe6, 0x88, 0x90, 0xe5, 0x8a, 0x9f, 0x48, 0x05, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xba, 0x47, 0x15, 0x92,
	0x02, 0x12, 0xe7, 0x99, 0xbb, 0xe5, 0xbd, 0x95, 0xe5, 0xa4, 0xb1, 0xe8, 0xb4, 0xa5, 0xe5, 0x8e,
	0x9f, 0xe5, 0x9b, 0xa0, 0x48, 0x06, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x39, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x18, 0xba, 0x47, 0x15, 0x92, 0x02, 0x12, 0xe7, 0x99, 0xbb, 0xe5, 0xbd,
	0x95, 0xe5, 0x9c, 0xb0, 0xe7, 0x90, 0x86, 0xe4, 0xbd, 0x8d, 0xe7, 0xbd, 0xae, 0x48, 0x07, 0x52,
	0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x48, 0x0a, 0x0a,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x24, 0xba, 0x47, 0x21, 0x92, 0x02, 0x1e, 0xe6, 0xb5, 0x8f, 0xe8, 0xa7, 0x88, 0xe5, 0x99,
	0xa8, 0xe7, 0x9a, 0x84, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe4, 0xbb, 0xa3, 0xe7, 0x90, 0x86,
	0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0x48, 0x08, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x3d, 0x0a, 0x0c, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x42, 0x15, 0xba, 0x47,
	0x12, 0x92, 0x02, 0x0f, 0xe6, 0xb5, 0x8f, 0xe8, 0xa7, 0x88, 0xe5, 0x99, 0xa8, 0xe5, 0x90, 0x8d,
	0xe7, 0xa7, 0xb0, 0x48, 0x09, 0x52, 0x0b, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x43, 0x0a, 0x0f, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x42, 0x15,
	0xba, 0x47, 0x12, 0x92, 0x02, 0x0f, 0xe6, 0xb5, 0x8f, 0xe8, 0xa7, 0x88, 0xe5, 0x99, 0xa8, 0xe7,
	0x89, 0x88, 0xe6, 0x9c, 0xac, 0x48, 0x0a, 0x52, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x09, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11,
	0xba, 0x47, 0x0e, 0x92, 0x02, 0x0b, 0xe5, 0xae, 0xa2, 0xe6, 0x88, 0xb7, 0xe7, 0xab, 0xaf, 0x49,
	0x44, 0x48, 0x0b, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x3c, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0xc9, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x15, 0xba, 0x47, 0x12, 0x92, 0x02, 0x0f, 0xe5, 0xae,
	0xa2, 0xe6, 0x88, 0xb7, 0xe7, 0xab, 0xaf, 0xe5, 0x90, 0x8d, 0xe7, 0xa7, 0xb0, 0x48, 0x0c, 0x52,
	0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x37,
	0x0a, 0x07, 0x6f, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0xca, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x18, 0xba, 0x47, 0x15, 0x92, 0x02, 0x12, 0xe6, 0x93, 0x8d, 0xe4, 0xbd, 0x9c, 0xe7, 0xb3,
	0xbb, 0xe7, 0xbb, 0x9f, 0xe5, 0x90, 0x8d, 0xe7, 0xa7, 0xb0, 0x48, 0x0d, 0x52, 0x06, 0x6f, 0x73,
	0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3d, 0x0a, 0x0a, 0x6f, 0x73, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0xcb, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xba, 0x47,
	0x15, 0x92, 0x02, 0x12, 0xe6, 0x93, 0x8d, 0xe4, 0xbd, 0x9c, 0xe7, 0xb3, 0xbb, 0xe7, 0xbb, 0x9f,
	0xe7, 0x89, 0x88, 0xe6, 0x9c, 0xac, 0x48, 0x0e, 0x52, 0x09, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0xac, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x17, 0xba, 0x47, 0x14, 0x92, 0x02, 0x11,
	0xe6, 0x93, 0x8d, 0xe4, 0xbd, 0x9c, 0xe8, 0x80, 0x85, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0x49,
	0x44, 0x48, 0x0f, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x3a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0xad, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x18, 0xba, 0x47, 0x15, 0x92, 0x02, 0x12, 0xe6, 0x93, 0x8d, 0xe4, 0xbd, 0x9c, 0xe8,
	0x80, 0x85, 0xe8, 0xb4, 0xa6, 0xe5, 0x8f, 0xb7, 0xe5, 0x90, 0x8d, 0x48, 0x10, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x0b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x90, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x12, 0xba, 0x47, 0x0f, 0x92, 0x02, 0x0c, 0xe5, 0x88, 0x9b, 0xe5, 0xbb, 0xba, 0xe6, 0x97,
	0xb6, 0xe9, 0x97, 0xb4, 0x48, 0x11, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x70, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x5f, 0x6d, 0x61, 0x63, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x62, 0x72,
	0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x62,
	0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x6f, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6f, 0x73, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x22, 0x68, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x29, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x51, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c,
	0x6f, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8f, 0x03, 0x0a, 0x1a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x73, 0x0a, 0x0b,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x42, 0x36, 0xba,
	0x47, 0x33, 0x3a, 0x16, 0x12, 0x14, 0x69, 0x64, 0x2c, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x2c, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x92, 0x02, 0x18, 0xe8, 0xa6, 0x81,
	0xe6, 0x9b, 0xb4, 0xe6, 0x96, 0xb0, 0xe7, 0x9a, 0x84, 0xe5, 0xad, 0x97, 0xe6, 0xae, 0xb5, 0xe5,
	0x88, 0x97, 0xe8, 0xa1, 0xa8, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73,
	0x6b, 0x12, 0xb4, 0x01, 0x0a, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x42, 0x89, 0x01, 0xba, 0x47, 0x85, 0x01,
	0x92, 0x02, 0x81, 0x01, 0xe5, 0xa6, 0x82, 0xe6, 0x9e, 0x9c, 0xe8, 0xae, 0xbe, 0xe7, 0xbd, 0xae,
	0xe4, 0xb8, 0xba, 0x74, 0x72, 0x75, 0x65, 0xe7, 0x9a, 0x84, 0xe6, 0x97, 0xb6, 0xe5, 0x80, 0x99,
	0xef, 0xbc, 0x8c, 0xe8, 0xb5, 0x84, 0xe6, 0xba, 0x90, 0xe4, 0xb8, 0x8d, 0xe5, 0xad, 0x98, 0xe5,
	0x9c, 0xa8, 0xe5, 0x88, 0x99, 0xe4, 0xbc, 0x9a, 0xe6, 0x96, 0xb0, 0xe5, 0xa2, 0x9e, 0x28, 0xe6,
	0x8f, 0x92, 0xe5, 0x85, 0xa5, 0x29, 0xef, 0xbc, 0x8c, 0xe5, 0xb9, 0xb6, 0xe4, 0xb8, 0x94, 0xe5,
	0x9c, 0xa8, 0xe8, 0xbf, 0x99, 0xe7, 0xa7, 0x8d, 0xe6, 0x83, 0x85, 0xe5, 0x86, 0xb5, 0xe4, 0xb8,
	0x8b, 0x60, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x60, 0xe5, 0xad, 0x97,
	0xe6, 0xae, 0xb5, 0xe5, 0xb0, 0x86, 0xe4, 0xbc, 0x9a, 0xe8, 0xa2, 0xab, 0xe5, 0xbf, 0xbd, 0xe7,
	0x95, 0xa5, 0xe3, 0x80, 0x82, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4d, 0x69,
	0x73, 0x73, 0x69, 0x6e, 0x67, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x61, 0x6c, 0x6c,
	0x6f, 0x77, 0x5f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x22, 0x2c, 0x0a, 0x1a, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x32, 0x86, 0x02, 0x0a, 0x14, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x72, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x5f, 0x6c, 0x6f, 0x67, 0x73, 0x12, 0x7a, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x29, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21,
	0x12, 0x1f, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x6c, 0x6f, 0x67, 0x73, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x42, 0xc1, 0x01, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x13, 0x49, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x32, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2d, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x41, 0x53, 0x58, 0xaa, 0x02, 0x10, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x56, 0x31, 0xca, 0x02,
	0x10, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5c, 0x56,
	0x31, 0xe2, 0x02, 0x1c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x12, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x3a, 0x3a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_admin_service_v1_i_admin_login_log_proto_rawDescOnce sync.Once
	file_admin_service_v1_i_admin_login_log_proto_rawDescData []byte
)

func file_admin_service_v1_i_admin_login_log_proto_rawDescGZIP() []byte {
	file_admin_service_v1_i_admin_login_log_proto_rawDescOnce.Do(func() {
		file_admin_service_v1_i_admin_login_log_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_admin_service_v1_i_admin_login_log_proto_rawDesc), len(file_admin_service_v1_i_admin_login_log_proto_rawDesc)))
	})
	return file_admin_service_v1_i_admin_login_log_proto_rawDescData
}

var file_admin_service_v1_i_admin_login_log_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_admin_service_v1_i_admin_login_log_proto_goTypes = []any{
	(*AdminLoginLog)(nil),              // 0: admin.service.v1.AdminLoginLog
	(*ListAdminLoginLogResponse)(nil),  // 1: admin.service.v1.ListAdminLoginLogResponse
	(*GetAdminLoginLogRequest)(nil),    // 2: admin.service.v1.GetAdminLoginLogRequest
	(*CreateAdminLoginLogRequest)(nil), // 3: admin.service.v1.CreateAdminLoginLogRequest
	(*UpdateAdminLoginLogRequest)(nil), // 4: admin.service.v1.UpdateAdminLoginLogRequest
	(*DeleteAdminLoginLogRequest)(nil), // 5: admin.service.v1.DeleteAdminLoginLogRequest
	(*timestamppb.Timestamp)(nil),      // 6: google.protobuf.Timestamp
	(*fieldmaskpb.FieldMask)(nil),      // 7: google.protobuf.FieldMask
	(*v1.PagingRequest)(nil),           // 8: pagination.PagingRequest
}
var file_admin_service_v1_i_admin_login_log_proto_depIdxs = []int32{
	6, // 0: admin.service.v1.AdminLoginLog.login_time:type_name -> google.protobuf.Timestamp
	0, // 1: admin.service.v1.ListAdminLoginLogResponse.items:type_name -> admin.service.v1.AdminLoginLog
	0, // 2: admin.service.v1.CreateAdminLoginLogRequest.data:type_name -> admin.service.v1.AdminLoginLog
	0, // 3: admin.service.v1.UpdateAdminLoginLogRequest.data:type_name -> admin.service.v1.AdminLoginLog
	7, // 4: admin.service.v1.UpdateAdminLoginLogRequest.update_mask:type_name -> google.protobuf.FieldMask
	8, // 5: admin.service.v1.AdminLoginLogService.List:input_type -> pagination.PagingRequest
	2, // 6: admin.service.v1.AdminLoginLogService.Get:input_type -> admin.service.v1.GetAdminLoginLogRequest
	1, // 7: admin.service.v1.AdminLoginLogService.List:output_type -> admin.service.v1.ListAdminLoginLogResponse
	0, // 8: admin.service.v1.AdminLoginLogService.Get:output_type -> admin.service.v1.AdminLoginLog
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_admin_service_v1_i_admin_login_log_proto_init() }
func file_admin_service_v1_i_admin_login_log_proto_init() {
	if File_admin_service_v1_i_admin_login_log_proto != nil {
		return
	}
	file_admin_service_v1_i_admin_login_log_proto_msgTypes[0].OneofWrappers = []any{}
	file_admin_service_v1_i_admin_login_log_proto_msgTypes[4].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_admin_service_v1_i_admin_login_log_proto_rawDesc), len(file_admin_service_v1_i_admin_login_log_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_admin_service_v1_i_admin_login_log_proto_goTypes,
		DependencyIndexes: file_admin_service_v1_i_admin_login_log_proto_depIdxs,
		MessageInfos:      file_admin_service_v1_i_admin_login_log_proto_msgTypes,
	}.Build()
	File_admin_service_v1_i_admin_login_log_proto = out.File
	file_admin_service_v1_i_admin_login_log_proto_goTypes = nil
	file_admin_service_v1_i_admin_login_log_proto_depIdxs = nil
}
