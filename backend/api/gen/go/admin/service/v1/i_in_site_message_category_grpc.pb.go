// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             (unknown)
// source: admin/service/v1/i_in_site_message_category.proto

package servicev1

import (
	context "context"
	v1 "github.com/tx7do/kratos-bootstrap/api/gen/go/pagination/v1"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	v11 "kratos-admin/api/gen/go/system/service/v1"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	InSiteMessageCategoryService_ListInSiteMessageCategory_FullMethodName   = "/admin.service.v1.InSiteMessageCategoryService/ListInSiteMessageCategory"
	InSiteMessageCategoryService_GetInSiteMessageCategory_FullMethodName    = "/admin.service.v1.InSiteMessageCategoryService/GetInSiteMessageCategory"
	InSiteMessageCategoryService_CreateInSiteMessageCategory_FullMethodName = "/admin.service.v1.InSiteMessageCategoryService/CreateInSiteMessageCategory"
	InSiteMessageCategoryService_UpdateInSiteMessageCategory_FullMethodName = "/admin.service.v1.InSiteMessageCategoryService/UpdateInSiteMessageCategory"
	InSiteMessageCategoryService_DeleteInSiteMessageCategory_FullMethodName = "/admin.service.v1.InSiteMessageCategoryService/DeleteInSiteMessageCategory"
)

// InSiteMessageCategoryServiceClient is the client API for InSiteMessageCategoryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// 站内信分类管理服务
type InSiteMessageCategoryServiceClient interface {
	// 查询站内信分类列表
	ListInSiteMessageCategory(ctx context.Context, in *v1.PagingRequest, opts ...grpc.CallOption) (*v11.ListInSiteMessageCategoryResponse, error)
	// 查询站内信分类详情
	GetInSiteMessageCategory(ctx context.Context, in *v11.GetInSiteMessageCategoryRequest, opts ...grpc.CallOption) (*v11.InSiteMessageCategory, error)
	// 创建站内信分类
	CreateInSiteMessageCategory(ctx context.Context, in *v11.CreateInSiteMessageCategoryRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// 更新站内信分类
	UpdateInSiteMessageCategory(ctx context.Context, in *v11.UpdateInSiteMessageCategoryRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// 删除站内信分类
	DeleteInSiteMessageCategory(ctx context.Context, in *v11.DeleteInSiteMessageCategoryRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type inSiteMessageCategoryServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewInSiteMessageCategoryServiceClient(cc grpc.ClientConnInterface) InSiteMessageCategoryServiceClient {
	return &inSiteMessageCategoryServiceClient{cc}
}

func (c *inSiteMessageCategoryServiceClient) ListInSiteMessageCategory(ctx context.Context, in *v1.PagingRequest, opts ...grpc.CallOption) (*v11.ListInSiteMessageCategoryResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(v11.ListInSiteMessageCategoryResponse)
	err := c.cc.Invoke(ctx, InSiteMessageCategoryService_ListInSiteMessageCategory_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inSiteMessageCategoryServiceClient) GetInSiteMessageCategory(ctx context.Context, in *v11.GetInSiteMessageCategoryRequest, opts ...grpc.CallOption) (*v11.InSiteMessageCategory, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(v11.InSiteMessageCategory)
	err := c.cc.Invoke(ctx, InSiteMessageCategoryService_GetInSiteMessageCategory_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inSiteMessageCategoryServiceClient) CreateInSiteMessageCategory(ctx context.Context, in *v11.CreateInSiteMessageCategoryRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, InSiteMessageCategoryService_CreateInSiteMessageCategory_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inSiteMessageCategoryServiceClient) UpdateInSiteMessageCategory(ctx context.Context, in *v11.UpdateInSiteMessageCategoryRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, InSiteMessageCategoryService_UpdateInSiteMessageCategory_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inSiteMessageCategoryServiceClient) DeleteInSiteMessageCategory(ctx context.Context, in *v11.DeleteInSiteMessageCategoryRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, InSiteMessageCategoryService_DeleteInSiteMessageCategory_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InSiteMessageCategoryServiceServer is the server API for InSiteMessageCategoryService service.
// All implementations must embed UnimplementedInSiteMessageCategoryServiceServer
// for forward compatibility.
//
// 站内信分类管理服务
type InSiteMessageCategoryServiceServer interface {
	// 查询站内信分类列表
	ListInSiteMessageCategory(context.Context, *v1.PagingRequest) (*v11.ListInSiteMessageCategoryResponse, error)
	// 查询站内信分类详情
	GetInSiteMessageCategory(context.Context, *v11.GetInSiteMessageCategoryRequest) (*v11.InSiteMessageCategory, error)
	// 创建站内信分类
	CreateInSiteMessageCategory(context.Context, *v11.CreateInSiteMessageCategoryRequest) (*emptypb.Empty, error)
	// 更新站内信分类
	UpdateInSiteMessageCategory(context.Context, *v11.UpdateInSiteMessageCategoryRequest) (*emptypb.Empty, error)
	// 删除站内信分类
	DeleteInSiteMessageCategory(context.Context, *v11.DeleteInSiteMessageCategoryRequest) (*emptypb.Empty, error)
	mustEmbedUnimplementedInSiteMessageCategoryServiceServer()
}

// UnimplementedInSiteMessageCategoryServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedInSiteMessageCategoryServiceServer struct{}

func (UnimplementedInSiteMessageCategoryServiceServer) ListInSiteMessageCategory(context.Context, *v1.PagingRequest) (*v11.ListInSiteMessageCategoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListInSiteMessageCategory not implemented")
}
func (UnimplementedInSiteMessageCategoryServiceServer) GetInSiteMessageCategory(context.Context, *v11.GetInSiteMessageCategoryRequest) (*v11.InSiteMessageCategory, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInSiteMessageCategory not implemented")
}
func (UnimplementedInSiteMessageCategoryServiceServer) CreateInSiteMessageCategory(context.Context, *v11.CreateInSiteMessageCategoryRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateInSiteMessageCategory not implemented")
}
func (UnimplementedInSiteMessageCategoryServiceServer) UpdateInSiteMessageCategory(context.Context, *v11.UpdateInSiteMessageCategoryRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateInSiteMessageCategory not implemented")
}
func (UnimplementedInSiteMessageCategoryServiceServer) DeleteInSiteMessageCategory(context.Context, *v11.DeleteInSiteMessageCategoryRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteInSiteMessageCategory not implemented")
}
func (UnimplementedInSiteMessageCategoryServiceServer) mustEmbedUnimplementedInSiteMessageCategoryServiceServer() {
}
func (UnimplementedInSiteMessageCategoryServiceServer) testEmbeddedByValue() {}

// UnsafeInSiteMessageCategoryServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to InSiteMessageCategoryServiceServer will
// result in compilation errors.
type UnsafeInSiteMessageCategoryServiceServer interface {
	mustEmbedUnimplementedInSiteMessageCategoryServiceServer()
}

func RegisterInSiteMessageCategoryServiceServer(s grpc.ServiceRegistrar, srv InSiteMessageCategoryServiceServer) {
	// If the following call pancis, it indicates UnimplementedInSiteMessageCategoryServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&InSiteMessageCategoryService_ServiceDesc, srv)
}

func _InSiteMessageCategoryService_ListInSiteMessageCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(v1.PagingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InSiteMessageCategoryServiceServer).ListInSiteMessageCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: InSiteMessageCategoryService_ListInSiteMessageCategory_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InSiteMessageCategoryServiceServer).ListInSiteMessageCategory(ctx, req.(*v1.PagingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InSiteMessageCategoryService_GetInSiteMessageCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(v11.GetInSiteMessageCategoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InSiteMessageCategoryServiceServer).GetInSiteMessageCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: InSiteMessageCategoryService_GetInSiteMessageCategory_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InSiteMessageCategoryServiceServer).GetInSiteMessageCategory(ctx, req.(*v11.GetInSiteMessageCategoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InSiteMessageCategoryService_CreateInSiteMessageCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(v11.CreateInSiteMessageCategoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InSiteMessageCategoryServiceServer).CreateInSiteMessageCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: InSiteMessageCategoryService_CreateInSiteMessageCategory_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InSiteMessageCategoryServiceServer).CreateInSiteMessageCategory(ctx, req.(*v11.CreateInSiteMessageCategoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InSiteMessageCategoryService_UpdateInSiteMessageCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(v11.UpdateInSiteMessageCategoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InSiteMessageCategoryServiceServer).UpdateInSiteMessageCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: InSiteMessageCategoryService_UpdateInSiteMessageCategory_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InSiteMessageCategoryServiceServer).UpdateInSiteMessageCategory(ctx, req.(*v11.UpdateInSiteMessageCategoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InSiteMessageCategoryService_DeleteInSiteMessageCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(v11.DeleteInSiteMessageCategoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InSiteMessageCategoryServiceServer).DeleteInSiteMessageCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: InSiteMessageCategoryService_DeleteInSiteMessageCategory_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InSiteMessageCategoryServiceServer).DeleteInSiteMessageCategory(ctx, req.(*v11.DeleteInSiteMessageCategoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// InSiteMessageCategoryService_ServiceDesc is the grpc.ServiceDesc for InSiteMessageCategoryService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var InSiteMessageCategoryService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "admin.service.v1.InSiteMessageCategoryService",
	HandlerType: (*InSiteMessageCategoryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListInSiteMessageCategory",
			Handler:    _InSiteMessageCategoryService_ListInSiteMessageCategory_Handler,
		},
		{
			MethodName: "GetInSiteMessageCategory",
			Handler:    _InSiteMessageCategoryService_GetInSiteMessageCategory_Handler,
		},
		{
			MethodName: "CreateInSiteMessageCategory",
			Handler:    _InSiteMessageCategoryService_CreateInSiteMessageCategory_Handler,
		},
		{
			MethodName: "UpdateInSiteMessageCategory",
			Handler:    _InSiteMessageCategoryService_UpdateInSiteMessageCategory_Handler,
		},
		{
			MethodName: "DeleteInSiteMessageCategory",
			Handler:    _InSiteMessageCategoryService_DeleteInSiteMessageCategory_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "admin/service/v1/i_in_site_message_category.proto",
}
