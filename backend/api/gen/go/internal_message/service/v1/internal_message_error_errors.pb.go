// Code generated by protoc-gen-go-errors. DO NOT EDIT.

package servicev1

import (
	fmt "fmt"
	errors "github.com/go-kratos/kratos/v2/errors"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the kratos package it is being compiled against.
const _ = errors.SupportPackageIsVersion1

// common error
func IsMethodNotAllowed(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == InternalMessageErrorReason_METHOD_NOT_ALLOWED.String() && e.Code == 405
}

// common error
func ErrorMethodNotAllowed(format string, args ...interface{}) *errors.Error {
	return errors.New(405, InternalMessageErrorReason_METHOD_NOT_ALLOWED.String(), fmt.Sprintf(format, args...))
}

// 408
func IsRequestTimeout(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == InternalMessageErrorReason_REQUEST_TIMEOUT.String() && e.Code == 408
}

// 408
func ErrorRequestTimeout(format string, args ...interface{}) *errors.Error {
	return errors.New(408, InternalMessageErrorReason_REQUEST_TIMEOUT.String(), fmt.Sprintf(format, args...))
}

// 500
func IsInternalServerError(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == InternalMessageErrorReason_INTERNAL_SERVER_ERROR.String() && e.Code == 500
}

// 500
func ErrorInternalServerError(format string, args ...interface{}) *errors.Error {
	return errors.New(500, InternalMessageErrorReason_INTERNAL_SERVER_ERROR.String(), fmt.Sprintf(format, args...))
}

// 501
func IsNotImplemented(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == InternalMessageErrorReason_NOT_IMPLEMENTED.String() && e.Code == 501
}

// 501
func ErrorNotImplemented(format string, args ...interface{}) *errors.Error {
	return errors.New(501, InternalMessageErrorReason_NOT_IMPLEMENTED.String(), fmt.Sprintf(format, args...))
}

// 502
func IsNetworkError(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == InternalMessageErrorReason_NETWORK_ERROR.String() && e.Code == 502
}

// 502
func ErrorNetworkError(format string, args ...interface{}) *errors.Error {
	return errors.New(502, InternalMessageErrorReason_NETWORK_ERROR.String(), fmt.Sprintf(format, args...))
}

// 503
func IsServiceUnavailable(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == InternalMessageErrorReason_SERVICE_UNAVAILABLE.String() && e.Code == 503
}

// 503
func ErrorServiceUnavailable(format string, args ...interface{}) *errors.Error {
	return errors.New(503, InternalMessageErrorReason_SERVICE_UNAVAILABLE.String(), fmt.Sprintf(format, args...))
}

// 504
func IsNetworkTimeout(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == InternalMessageErrorReason_NETWORK_TIMEOUT.String() && e.Code == 504
}

// 504
func ErrorNetworkTimeout(format string, args ...interface{}) *errors.Error {
	return errors.New(504, InternalMessageErrorReason_NETWORK_TIMEOUT.String(), fmt.Sprintf(format, args...))
}

// 505
func IsRequestNotSupport(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == InternalMessageErrorReason_REQUEST_NOT_SUPPORT.String() && e.Code == 505
}

// 505
func ErrorRequestNotSupport(format string, args ...interface{}) *errors.Error {
	return errors.New(505, InternalMessageErrorReason_REQUEST_NOT_SUPPORT.String(), fmt.Sprintf(format, args...))
}

// 400
func IsBadRequest(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == InternalMessageErrorReason_BAD_REQUEST.String() && e.Code == 400
}

// 400
func ErrorBadRequest(format string, args ...interface{}) *errors.Error {
	return errors.New(400, InternalMessageErrorReason_BAD_REQUEST.String(), fmt.Sprintf(format, args...))
}

// 404
func IsResourceNotFound(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == InternalMessageErrorReason_RESOURCE_NOT_FOUND.String() && e.Code == 404
}

// 404
func ErrorResourceNotFound(format string, args ...interface{}) *errors.Error {
	return errors.New(404, InternalMessageErrorReason_RESOURCE_NOT_FOUND.String(), fmt.Sprintf(format, args...))
}

// 403
func IsAccessForbidden(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == InternalMessageErrorReason_ACCESS_FORBIDDEN.String() && e.Code == 403
}

// 403
func ErrorAccessForbidden(format string, args ...interface{}) *errors.Error {
	return errors.New(403, InternalMessageErrorReason_ACCESS_FORBIDDEN.String(), fmt.Sprintf(format, args...))
}
