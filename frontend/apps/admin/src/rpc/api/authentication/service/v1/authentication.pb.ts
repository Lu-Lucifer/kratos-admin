// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.6.0
//   protoc               unknown
// source: authentication/service/v1/authentication.proto

/* eslint-disable */
import { type Empty } from "../../../google/protobuf/empty.pb";

/** 授权类型 */
export enum GrantType {
  /** password - 密码模式（Resource Owner Password Credentials Grant） */
  password = "password",
  /** client_credentials - 客户端模式（Client Credentials Grant） */
  client_credentials = "client_credentials",
  /** authorization_code - 授权码模式（Authorization Code Grant） */
  authorization_code = "authorization_code",
  /** refresh_token - 刷新令牌 (Refresh Token) */
  refresh_token = "refresh_token",
  /** implicit - 简化模式 (Implicit Grant) */
  implicit = "implicit",
}

/** 令牌类型 */
export enum TokenType {
  /** bearer -  */
  bearer = "bearer",
  /** mac -  */
  mac = "mac",
}

/** 用户后台登录 - 请求 */
export interface LoginRequest {
  /** 授权类型，此处的值固定为"password"，必选项。 */
  grant_type: string;
  client_id?: string | null | undefined;
  client_secret?:
    | string
    | null
    | undefined;
  /** 以空格分隔的范围列表。如果未提供，scope则授权任何范围，默认为空列表。 */
  scope?:
    | string
    | null
    | undefined;
  /** 跳转链接 */
  redirect_uri?:
    | string
    | null
    | undefined;
  /** 用户名，必选项。 */
  username?:
    | string
    | null
    | undefined;
  /** 用户的密码，必选项。 */
  password?:
    | string
    | null
    | undefined;
  /** 更新令牌，用来获取下一次的访问令牌，必选项。 */
  refresh_token?:
    | string
    | null
    | undefined;
  /** 授权请求中收到的一次性验证/认证码。(当使用授权码模式时) */
  code?: string | null | undefined;
}

/** 用户后台登录 - 回应 */
export interface LoginResponse {
  /** 访问令牌，必选项。 */
  access_token: string;
  /** 更新令牌，用来获取下一次的访问令牌，可选项。 */
  refresh_token: string;
  /** 令牌类型，该值大小写不敏感，必选项，可以是bearer类型或mac类型。 */
  token_type: string;
  /** 令牌有效时间，单位为秒。如果访问令牌过期，服务器应回复授予访问令牌的持续时间。如果省略该参数，必须其他方式设置过期时间。 */
  expires_in?:
    | string
    | null
    | undefined;
  /** 以空格分隔的用户授予范围列表。如果未提供，scope则授权任何范围，默认为空列表。 */
  scope?: string | null | undefined;
}

/** 验证令牌 - 请求 */
export interface ValidateTokenRequest {
  /** 令牌 */
  token: string;
}

/** 验证令牌 - 回应 */
export interface ValidateTokenResponse {
  /** 令牌是否有效 */
  isValid: boolean;
}

/** 用户登录认证服务 */
export interface AuthenticationService {
  /** 用户登录 */
  Login(request: LoginRequest): Promise<LoginResponse>;
  /** 用户登出 */
  Logout(request: Empty): Promise<Empty>;
  /** 刷新认证令牌 */
  RefreshToken(request: LoginRequest): Promise<LoginResponse>;
  /** 验证令牌 */
  ValidateToken(request: ValidateTokenRequest): Promise<ValidateTokenResponse>;
}
